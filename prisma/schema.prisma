// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String    @id @unique @default(uuid(7))
  email     String    @unique
  password  String
  groceries Grocery[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id        String   @id @unique @default(uuid(7))
  email     String   @unique
  password  String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Grocery {
  id        String      @id @unique @default(uuid(7))
  name      String
  price     Float
  stock     Int
  adminId   String
  admin     Admin       @relation(fields: [adminId], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model Order {
  id        String      @id @unique @default(uuid(7))
  userId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @unique @default(uuid(7))
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  groceryId String
  grocery   Grocery @relation(fields: [groceryId], references: [id], onDelete: Cascade)
  quantity  Int
}